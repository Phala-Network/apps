name: CI-app

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      # FIXME: Not fully test yet
      # - name: Restore gatsby build from cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ${{ github.workspace }}/apps/app/.cache
      #       ${{ github.workspace }}/**/tsconfig.tsbuildinfo
      #       ${{ github.workspace }}/**/.eslintcache

      #     key: ${{ runner.os }}-app-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('apps/app/src/**.[jt]sx?', 'apps/app/src/**.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-app-${{ hashFiles('**/yarn.lock') }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Linter
        run: yarn lint

      # FIXME: Enable typecheck when it is ready
      # - name: Typecheck
      #   run: yarn typecheck

      - name: Build App
        working-directory: apps/app
        run: yarn build
